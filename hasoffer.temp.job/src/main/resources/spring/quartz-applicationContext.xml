<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
">

    <!-- 声明工厂 -->
    <bean id="qrtz_scheduler" autowire="no" lazy-init="false"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="jobFactory">
            <bean class="hasoffer.job.quartz.spring.SpringBeanJobFactory"/>
        </property>
        <property name="schedulerName" value="qrtz_scheduler"/>
        <!-- 发现添加dataSource之后无法正常执行调度任务，原因不知道。 -->
        <!--applicationContextSchedulerContextKey： 是org.springframework.scheduling.quartz.SchedulerFactoryBean这个类中
            把spring上下 文以key/value的方式存放在了quartz的上下文中了， 可以用applicationContextSchedulerContextKey所定义的key得到对应的spring上下文 -->
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey"/>
        <property name="triggers">
            <list>
                <ref bean="promDealFetchJobTrigger"/>
                <!--<ref bean="fetchTrigger"/>-->
            </list>
        </property>

        <property name="globalJobListeners">
            <list>
                <ref bean="historyJobListener"/>
            </list>
        </property>
    </bean>

    <bean id="historyJobListener" class="hasoffer.job.quartz.HistoryJobListener"/>

    <!-- demo job -->
    <bean name="demoJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="hasoffer.job.bean.DemoJobBean"/>
    </bean>

    <bean id="demoTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="demoJob"/>
        <property name="startDelay" value="1000"/>
        <property name="cronExpression" value="0 0 0/1 * * ? "/>
    </bean>

    <!--prom。。。deal站数据抓取-->
    <bean name="promDealFetchJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="hasoffer.job.bean.deal.PromDealFetchJobBean"/>
    </bean>
    <bean id="promDealFetchJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="promDealFetchJob"/>
        <property name="cronExpression" value="0 0/10 * * * ?"/>
    </bean>
</beans>